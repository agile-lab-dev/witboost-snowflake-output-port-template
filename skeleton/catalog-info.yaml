apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: ${{ values.identifier }}
  description: ${{ values.description | dump }}
  annotations:
    gitlab.com/project-slug: ${{ values.destination.owner + "/" + values.destination.repo }}
    backstage.io/techdocs-ref: dir:.
  tags:
    - snowflake
    - airbyte
    - workload
spec:
  type: workload
  lifecycle: experimental
  owner: ${{ values.developmentGroup | dump }}
  system: ${{ values.dataproduct | dump }}
  domain: ${{ values.domain | dump }}
  mesh:
    name: ${{ values.name | dump }}
    fullyQualifiedName: ${{ values.fullyQualifiedName | dump }}
    description: ${{ values.description | dump }}
    kind: workload
    version: ${{ values.identifier.split(".")[2] + ".0.0" }}
    infrastructureTemplateId: ${{ values.infrastructureTemplateId }}
    useCaseTemplateId: ${{ values.useCaseTemplateId }}
    dependsOn: {% if values.dependsOn | length > 0 %}{% for i in values.dependsOn %}
      - ${{ i }}{% endfor %}{% else %}[]{% endif %}
    platform: Snowflake
    technology: airbyte
    workloadType: batch
    connectionType: DataPipeline
    tags: []
    readsFrom: {% if values.readsFrom | length > 0 %}{% for i in values.readsFrom %}
      - ${{ i }}{% endfor %}{% else %}[]{% endif %}
    specific:
      sourceName: ${{ values.sourceName }}
      url: ${{ values.url }}
      format: ${{ values.format }}
      storage: ${{ values.storage }}
      dataset_name: ${{ values.dataset_name }}
      destinationName: ${{ values.destinationName }}
      host: ${{ values.host }}
      schema: ${{ values.schema }}
      database: ${{ values.database }}
      warehouse: ${{ values.warehouse }}
      connectionName: ${{ values.connectionName }}