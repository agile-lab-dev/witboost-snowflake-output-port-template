apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: ${{ values.identifier }}
  description: ${{ values.description | dump }}
  annotations:
    gitlab.com/project-slug: ${{ values.destination.owner + "/" + values.destination.repo }}
    backstage.io/techdocs-ref: dir:.
  tags:
    - outputport
    - snowflake
spec:
  type: outputport
  lifecycle: experimental
  owner: ${{ values.developmentGroup | dump }}
  system: ${{ values.dataproduct | dump }}
  domain: ${{ values.domain | dump }}
  mesh:
    name: ${{ values.name | dump }}
    fullyQualifiedName: ${{ values.fullyQualifiedName | dump }}
    description: ${{ values.description | dump }}
    kind: outputport
    version: ${{ values.identifier.split(".")[2] + ".0.0" }}
    infrastructureTemplateId: ${{ values.infrastructureTemplateId }}
    useCaseTemplateId: ${{ values.useCaseTemplateId }}
    dependsOn: {% if values.dependsOn | length > 0 %}{% for i in values.dependsOn %}
      - ${{ i }}{% endfor %}{% else %}[]{% endif %}
    platform: Snowflake
    technology: Snowflake
    outputPortType: SQL
    creationDate: ${{ values.creationDate }}
    startDate: ${{ values.creationDate }}
    dataContract:
      schema:
        - name: date
          dataType: DATE
          constraint: NO CONSTRAINT
        - name: location_key
          dataType: TEXT
          constraint: PRIMARY KEY
        - name: new_persons_vaccinated
          dataType: NUMBER
          constraint: NO CONSTRAINT
        - name: new_persons_fully_vaccinated
          dataType: NUMBER
          constraint: NO CONSTRAINT
        - name: new_vaccine_doses_administered
          dataType: NUMBER
          constraint: NO CONSTRAINT
        - name: cumulative_persons_vaccinated
          dataType: NUMBER
          constraint: NO CONSTRAINT
        - name: cumulative_persons_fully_vaccinated
          dataType: NUMBER
          constraint: NO CONSTRAINT
        - name: cumulative_vaccine_doses_administered
          dataType: NUMBER
          constraint: NO CONSTRAINT
    tags: []
    sampleData: {}
    semanticLinking: []
    specific:
      viewName: ${{ values.viewName }}
      tableName: ${{ values.tableName }}
      database: ${{ values.database | default(values.domain, true) | replace(r/domain:| |-/, "") | upper | dump}}
      schema: ${{ (values.schema | default(values.dataproduct.split(".")[1], true) | replace(r/ |-/, "") + "_" + values.identifier.split(".")[2]) | upper | dump }}

